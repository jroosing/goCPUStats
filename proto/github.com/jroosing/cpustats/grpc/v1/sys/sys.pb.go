// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.2
// source: proto/sys.proto

package sys

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type HardwareInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host *Host `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Cpu  *Cpu  `protobuf:"bytes,2,opt,name=cpu,proto3" json:"cpu,omitempty"`
}

func (x *HardwareInfo) Reset() {
	*x = HardwareInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HardwareInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HardwareInfo) ProtoMessage() {}

func (x *HardwareInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HardwareInfo.ProtoReflect.Descriptor instead.
func (*HardwareInfo) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{0}
}

func (x *HardwareInfo) GetHost() *Host {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *HardwareInfo) GetCpu() *Cpu {
	if x != nil {
		return x.Cpu
	}
	return nil
}

type Host struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostName           string `protobuf:"bytes,1,opt,name=host_name,json=hostName,proto3" json:"host_name,omitempty"`
	Platform           string `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`
	PlatformFamily     string `protobuf:"bytes,3,opt,name=platform_family,json=platformFamily,proto3" json:"platform_family,omitempty"`
	PlatformVersion    string `protobuf:"bytes,4,opt,name=platform_version,json=platformVersion,proto3" json:"platform_version,omitempty"`
	KernelVersion      string `protobuf:"bytes,5,opt,name=kernel_version,json=kernelVersion,proto3" json:"kernel_version,omitempty"`
	KernelArchitecture string `protobuf:"bytes,6,opt,name=kernel_architecture,json=kernelArchitecture,proto3" json:"kernel_architecture,omitempty"`
	OperatingSystem    string `protobuf:"bytes,7,opt,name=operating_system,json=operatingSystem,proto3" json:"operating_system,omitempty"`
}

func (x *Host) Reset() {
	*x = Host{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Host) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Host) ProtoMessage() {}

func (x *Host) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Host.ProtoReflect.Descriptor instead.
func (*Host) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{1}
}

func (x *Host) GetHostName() string {
	if x != nil {
		return x.HostName
	}
	return ""
}

func (x *Host) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *Host) GetPlatformFamily() string {
	if x != nil {
		return x.PlatformFamily
	}
	return ""
}

func (x *Host) GetPlatformVersion() string {
	if x != nil {
		return x.PlatformVersion
	}
	return ""
}

func (x *Host) GetKernelVersion() string {
	if x != nil {
		return x.KernelVersion
	}
	return ""
}

func (x *Host) GetKernelArchitecture() string {
	if x != nil {
		return x.KernelArchitecture
	}
	return ""
}

func (x *Host) GetOperatingSystem() string {
	if x != nil {
		return x.OperatingSystem
	}
	return ""
}

type Cpu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelName     string  `protobuf:"bytes,1,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`
	PhysicalCores int32   `protobuf:"varint,2,opt,name=physical_cores,json=physicalCores,proto3" json:"physical_cores,omitempty"`
	LogicalCores  int32   `protobuf:"varint,3,opt,name=logical_cores,json=logicalCores,proto3" json:"logical_cores,omitempty"`
	CacheSize     int32   `protobuf:"varint,4,opt,name=cache_size,json=cacheSize,proto3" json:"cache_size,omitempty"`
	Architecture  string  `protobuf:"bytes,5,opt,name=architecture,proto3" json:"architecture,omitempty"`
	Mhz           float64 `protobuf:"fixed64,6,opt,name=mhz,proto3" json:"mhz,omitempty"`
}

func (x *Cpu) Reset() {
	*x = Cpu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cpu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cpu) ProtoMessage() {}

func (x *Cpu) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cpu.ProtoReflect.Descriptor instead.
func (*Cpu) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{2}
}

func (x *Cpu) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *Cpu) GetPhysicalCores() int32 {
	if x != nil {
		return x.PhysicalCores
	}
	return 0
}

func (x *Cpu) GetLogicalCores() int32 {
	if x != nil {
		return x.LogicalCores
	}
	return 0
}

func (x *Cpu) GetCacheSize() int32 {
	if x != nil {
		return x.CacheSize
	}
	return 0
}

func (x *Cpu) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

func (x *Cpu) GetMhz() float64 {
	if x != nil {
		return x.Mhz
	}
	return 0
}

type HardwareLoad struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cpu     *CpuLoad              `protobuf:"bytes,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Mem     *MemoryLoad           `protobuf:"bytes,2,opt,name=mem,proto3" json:"mem,omitempty"`
	SwapMem *MemoryLoad           `protobuf:"bytes,3,opt,name=swap_mem,json=swapMem,proto3" json:"swap_mem,omitempty"`
	Temps   *HardwareTemperatures `protobuf:"bytes,4,opt,name=temps,proto3" json:"temps,omitempty"`
}

func (x *HardwareLoad) Reset() {
	*x = HardwareLoad{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HardwareLoad) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HardwareLoad) ProtoMessage() {}

func (x *HardwareLoad) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HardwareLoad.ProtoReflect.Descriptor instead.
func (*HardwareLoad) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{3}
}

func (x *HardwareLoad) GetCpu() *CpuLoad {
	if x != nil {
		return x.Cpu
	}
	return nil
}

func (x *HardwareLoad) GetMem() *MemoryLoad {
	if x != nil {
		return x.Mem
	}
	return nil
}

func (x *HardwareLoad) GetSwapMem() *MemoryLoad {
	if x != nil {
		return x.SwapMem
	}
	return nil
}

func (x *HardwareLoad) GetTemps() *HardwareTemperatures {
	if x != nil {
		return x.Temps
	}
	return nil
}

type CpuLoad struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UsedPercent               int32   `protobuf:"varint,1,opt,name=used_percent,json=usedPercent,proto3" json:"used_percent,omitempty"`
	UsedPerLogicalCorePercent []int32 `protobuf:"varint,2,rep,packed,name=used_per_logical_core_percent,json=usedPerLogicalCorePercent,proto3" json:"used_per_logical_core_percent,omitempty"`
}

func (x *CpuLoad) Reset() {
	*x = CpuLoad{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CpuLoad) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CpuLoad) ProtoMessage() {}

func (x *CpuLoad) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CpuLoad.ProtoReflect.Descriptor instead.
func (*CpuLoad) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{4}
}

func (x *CpuLoad) GetUsedPercent() int32 {
	if x != nil {
		return x.UsedPercent
	}
	return 0
}

func (x *CpuLoad) GetUsedPerLogicalCorePercent() []int32 {
	if x != nil {
		return x.UsedPerLogicalCorePercent
	}
	return nil
}

type MemoryLoad struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total       uint64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Used        uint64 `protobuf:"varint,2,opt,name=used,proto3" json:"used,omitempty"`
	UsedPercent int32  `protobuf:"varint,3,opt,name=used_percent,json=usedPercent,proto3" json:"used_percent,omitempty"`
}

func (x *MemoryLoad) Reset() {
	*x = MemoryLoad{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemoryLoad) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryLoad) ProtoMessage() {}

func (x *MemoryLoad) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryLoad.ProtoReflect.Descriptor instead.
func (*MemoryLoad) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{5}
}

func (x *MemoryLoad) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *MemoryLoad) GetUsed() uint64 {
	if x != nil {
		return x.Used
	}
	return 0
}

func (x *MemoryLoad) GetUsedPercent() int32 {
	if x != nil {
		return x.UsedPercent
	}
	return 0
}

type TempStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Temperature int32 `protobuf:"varint,1,opt,name=temperature,proto3" json:"temperature,omitempty"`
	High        int32 `protobuf:"varint,2,opt,name=high,proto3" json:"high,omitempty"`
	Critical    int32 `protobuf:"varint,3,opt,name=critical,proto3" json:"critical,omitempty"`
}

func (x *TempStats) Reset() {
	*x = TempStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TempStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TempStats) ProtoMessage() {}

func (x *TempStats) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TempStats.ProtoReflect.Descriptor instead.
func (*TempStats) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{6}
}

func (x *TempStats) GetTemperature() int32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *TempStats) GetHigh() int32 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *TempStats) GetCritical() int32 {
	if x != nil {
		return x.Critical
	}
	return 0
}

type HardwareTemperatures struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cpu    *TempStats `protobuf:"bytes,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Gpu    *TempStats `protobuf:"bytes,2,opt,name=gpu,proto3" json:"gpu,omitempty"`
	Memory *TempStats `protobuf:"bytes,3,opt,name=memory,proto3" json:"memory,omitempty"`
	Disk   *TempStats `protobuf:"bytes,4,opt,name=disk,proto3" json:"disk,omitempty"`
}

func (x *HardwareTemperatures) Reset() {
	*x = HardwareTemperatures{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HardwareTemperatures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HardwareTemperatures) ProtoMessage() {}

func (x *HardwareTemperatures) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HardwareTemperatures.ProtoReflect.Descriptor instead.
func (*HardwareTemperatures) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{7}
}

func (x *HardwareTemperatures) GetCpu() *TempStats {
	if x != nil {
		return x.Cpu
	}
	return nil
}

func (x *HardwareTemperatures) GetGpu() *TempStats {
	if x != nil {
		return x.Gpu
	}
	return nil
}

func (x *HardwareTemperatures) GetMemory() *TempStats {
	if x != nil {
		return x.Memory
	}
	return nil
}

func (x *HardwareTemperatures) GetDisk() *TempStats {
	if x != nil {
		return x.Disk
	}
	return nil
}

var File_proto_sys_proto protoreflect.FileDescriptor

var file_proto_sys_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x79, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0c, 0x63, 0x70, 0x75, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x22,
	0x5b, 0x0a, 0x0c, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x26, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x63, 0x70, 0x75, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x48, 0x6f, 0x73,
	0x74, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x70, 0x75, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x43, 0x70, 0x75, 0x52, 0x03, 0x63, 0x70, 0x75, 0x22, 0x96, 0x02, 0x0a,
	0x04, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x27,
	0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x66, 0x61, 0x6d, 0x69, 0x6c,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6b, 0x65, 0x72, 0x6e,
	0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x13, 0x6b, 0x65, 0x72,
	0x6e, 0x65, 0x6c, 0x5f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x22, 0xc5, 0x01, 0x0a, 0x03, 0x43, 0x70, 0x75, 0x12, 0x1d, 0x0a,
	0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x43, 0x6f,
	0x72, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x63,
	0x6f, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6c, 0x6f, 0x67, 0x69,
	0x63, 0x61, 0x6c, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x69,
	0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61,
	0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x68, 0x7a, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d, 0x68, 0x7a, 0x22, 0xd2, 0x01,
	0x0a, 0x0c, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x27,
	0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x70,
	0x75, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x43, 0x70, 0x75, 0x4c, 0x6f,
	0x61, 0x64, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x2a, 0x0a, 0x03, 0x6d, 0x65, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x70, 0x75, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4c, 0x6f, 0x61, 0x64, 0x52, 0x03,
	0x6d, 0x65, 0x6d, 0x12, 0x33, 0x0a, 0x08, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x6d, 0x65, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x70, 0x75, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4c, 0x6f, 0x61, 0x64, 0x52,
	0x07, 0x73, 0x77, 0x61, 0x70, 0x4d, 0x65, 0x6d, 0x12, 0x38, 0x0a, 0x05, 0x74, 0x65, 0x6d, 0x70,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x70, 0x75, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x05, 0x74, 0x65, 0x6d,
	0x70, 0x73, 0x22, 0x6e, 0x0a, 0x07, 0x43, 0x70, 0x75, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x64, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x12, 0x40, 0x0a, 0x1d, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x67,
	0x69, 0x63, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x19, 0x75, 0x73, 0x65, 0x64, 0x50, 0x65, 0x72,
	0x4c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x72, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x22, 0x59, 0x0a, 0x0a, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4c, 0x6f, 0x61, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x75, 0x73, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73,
	0x65, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x75, 0x73, 0x65, 0x64, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x22, 0x5d, 0x0a,
	0x09, 0x54, 0x65, 0x6d, 0x70, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65,
	0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x69, 0x67, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x68, 0x69, 0x67, 0x68,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x22, 0xca, 0x01, 0x0a,
	0x14, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x70, 0x75, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x03, 0x63, 0x70, 0x75,
	0x12, 0x29, 0x0a, 0x03, 0x67, 0x70, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x63, 0x70, 0x75, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6d,
	0x70, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x03, 0x67, 0x70, 0x75, 0x12, 0x2f, 0x0a, 0x06, 0x6d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x70,
	0x75, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x2b, 0x0a, 0x04,
	0x64, 0x69, 0x73, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x70, 0x75,
	0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x52, 0x04, 0x64, 0x69, 0x73, 0x6b, 0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x72, 0x6f, 0x6f, 0x73, 0x69, 0x6e, 0x67,
	0x2f, 0x63, 0x70, 0x75, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x79, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_sys_proto_rawDescOnce sync.Once
	file_proto_sys_proto_rawDescData = file_proto_sys_proto_rawDesc
)

func file_proto_sys_proto_rawDescGZIP() []byte {
	file_proto_sys_proto_rawDescOnce.Do(func() {
		file_proto_sys_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_sys_proto_rawDescData)
	})
	return file_proto_sys_proto_rawDescData
}

var file_proto_sys_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_sys_proto_goTypes = []interface{}{
	(*HardwareInfo)(nil),         // 0: cpustats.sys.HardwareInfo
	(*Host)(nil),                 // 1: cpustats.sys.Host
	(*Cpu)(nil),                  // 2: cpustats.sys.Cpu
	(*HardwareLoad)(nil),         // 3: cpustats.sys.HardwareLoad
	(*CpuLoad)(nil),              // 4: cpustats.sys.CpuLoad
	(*MemoryLoad)(nil),           // 5: cpustats.sys.MemoryLoad
	(*TempStats)(nil),            // 6: cpustats.sys.TempStats
	(*HardwareTemperatures)(nil), // 7: cpustats.sys.HardwareTemperatures
}
var file_proto_sys_proto_depIdxs = []int32{
	1,  // 0: cpustats.sys.HardwareInfo.host:type_name -> cpustats.sys.Host
	2,  // 1: cpustats.sys.HardwareInfo.cpu:type_name -> cpustats.sys.Cpu
	4,  // 2: cpustats.sys.HardwareLoad.cpu:type_name -> cpustats.sys.CpuLoad
	5,  // 3: cpustats.sys.HardwareLoad.mem:type_name -> cpustats.sys.MemoryLoad
	5,  // 4: cpustats.sys.HardwareLoad.swap_mem:type_name -> cpustats.sys.MemoryLoad
	7,  // 5: cpustats.sys.HardwareLoad.temps:type_name -> cpustats.sys.HardwareTemperatures
	6,  // 6: cpustats.sys.HardwareTemperatures.cpu:type_name -> cpustats.sys.TempStats
	6,  // 7: cpustats.sys.HardwareTemperatures.gpu:type_name -> cpustats.sys.TempStats
	6,  // 8: cpustats.sys.HardwareTemperatures.memory:type_name -> cpustats.sys.TempStats
	6,  // 9: cpustats.sys.HardwareTemperatures.disk:type_name -> cpustats.sys.TempStats
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_proto_sys_proto_init() }
func file_proto_sys_proto_init() {
	if File_proto_sys_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_sys_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HardwareInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Host); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cpu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HardwareLoad); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CpuLoad); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemoryLoad); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TempStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HardwareTemperatures); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_sys_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_sys_proto_goTypes,
		DependencyIndexes: file_proto_sys_proto_depIdxs,
		MessageInfos:      file_proto_sys_proto_msgTypes,
	}.Build()
	File_proto_sys_proto = out.File
	file_proto_sys_proto_rawDesc = nil
	file_proto_sys_proto_goTypes = nil
	file_proto_sys_proto_depIdxs = nil
}
